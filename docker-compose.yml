version: '3.7'
services:
  main:
    build: .
    image: opuscapita/sftp-gateway:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - kong
      - api-registry
      - auth
      - blob
      - acl
      - tnt
      - kafka
    labels:
      SERVICE_NAME: ${SERVICE_NAME}
      SERVICE_TAGS: external,gateway
    environment:
      PORT: 2223
      SERVICE_NAME: ${SERVICE_NAME}
      SERVICE_2222_NAME: ${SERVICE_NAME_DAEMON}
      SERVICE_2223_NAME: ${SERVICE_NAME}
      SERVICE_2223_CHECK_HTTP: /api/health/check
      SERVICE_2223_CHECK_INTERVAL: 15s
      SERVICE_2223_CHECK_TIMEOUT: 3s
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_USER: ${SECRET_develop_MYSQL_ROOT_USER}
      KAFKA_USER: ${SECRET_develop_KAFKA_USER}
      KAFKA_PASSWORD: ${SECRET_develop_KAFKA_PASSWORD}
    ports:
      - 2222:2222
      - 2223:2223

  tnt:
    image: opuscapita/tnt:dev
    labels:
      SERVICE_NAME: tnt
      SERVICE_TAGS: external
    environment:
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SIRIUS_B2B_USER: ${SECRET_develop_SIRIUS_B2B_USER}
      SIRIUS_B2B_PASS: ${SECRET_develop_SIRIUS_B2B_PASS}
#      RET_PERIOD: ${SECRET_develop_RET_PERIOD}
#      REP_NAME: ${SECRET_develop_REP_NAME}
#      REP_CONTAINER: ${SECRET_develop_REP_CONTAINER}
      SERVICE_3027_CHECK_HTTP: /api/health/check
      SERVICE_3027_CHECK_INTERVAL: 15s
      SERVICE_3027_CHECK_TIMEOUT: 3s
      SERVICE_3027_NAME: tnt
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
      - kong
      - rabbitmq
      - business-partner
      - acl
      - auth
      - api-registry
      - elasticsearch
    ports:
      - 3027:3027

  business-partner:
    image: opuscapita/business-partner:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
      - auth
    labels:
      SERVICE_NAME: business-partner
      SERVICE_TAGS: kong
    ports:
      - 3046:3046
    environment:
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE_B}
      NODE_ENV: ${NODE_ENV}
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SERVICE_3046_CHECK_HTTP: /api/health/check
      SERVICE_3046_CHECK_INTERVAL: 15s
      SERVICE_3046_CHECK_TIMEOUT: 3s
    command: 'npm run dev'

  business-link:
    image: opuscapita/business-link:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
    labels:
      SERVICE_NAME: 'business-link'
    environment:
      NODE_ENV: ${NODE_ENV}
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE_B}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
#      REP_FTP_USER: ${REP_FTP_USER}
#      REP_FTP_HOST: ${REP_FTP_HOST}
#      REP_FTP_PASSWORD: ${REP_FTP_PASSWORD}
#      REP_FTP_PORT: ${REP_FTP_PORT}
#      REP_FTP_FOLDER: ${REP_FTP_FOLDER}
#      REP_FTP_ENV: ${REP_FTP_ENV}
#      REP_PROV_URL: ${REP_PROV_URL}
      SERVICE_3026_NAME: business-link
      SERVICE_3026_CHECK_HTTP: /api/health/check
      SERVICE_3026_CHECK_INTERVAL: 15s
      SERVICE_3026_CHECK_TIMEOUT: 3s
    ports:
      - '3026:3026'
    command: 'npm run dev'

  auth:
    image: opuscapita/auth:dev
    ports:
      - $SECRET_develop_AUTH_HOST_PORT:$SECRET_develop_AUTH_HOST_PORT
    environment:
      NODE_ENV: $NODE_ENV
      AUTH_HOST: '0.0.0.0'
      AUTH_PROTOCOL: $SECRET_develop_AUTH_PROTOCOL
      AUTH_PORT: $SECRET_develop_AUTH_HOST_PORT
      GATEWAY_SCHEME: $SECRET_develop_AUTH_GATEWAY_SCHEME
      GATEWAY_IP: $SECRET_develop_AUTH_GATEWAY_IP
      GATEWAY_PORT: $SECRET_develop_AUTH_GATEWAY_PORT
      GATEWAY_CALLBACK: $SECRET_develop_AUTH_GATEWAY_CALLBACK
      MYSQL_ROOT_PASSWORD: $SECRET_develop_MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SERVICE_3005_CHECK_HTTP: /api/health/check
      SERVICE_3005_CHECK_INTERVAL: 15s
      SERVICE_3005_CHECK_TIMEOUT: 3s
    depends_on:
      - mysql
      - kong
      - consul
      - registrator
      - api-registry
      - acl
      - user
    command: 'npm run dev'

  blob:
    image: opuscapita/blob:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - acl
    labels:
      SERVICE_TAGS: 'external,kong'
      SERVICE_NAME: blob
    environment:
      REDIS_AUTH: $SECRET_develop_REDIS_AUTH
      MYSQL_ROOT_PASSWORD: $SECRET_develop_MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
      BLOB_KEY: ${SECRET_develop_BLOB_KEY}
      BLOB_ACCOUNT: ${SECRET_develop_BLOB_ACCOUNT}
      SERVICE_3012_CHECK_HTTP: /api/health/check
      SERVICE_3012_CHECK_INTERVAL: 15s
      SERVICE_3012_CHECK_TIMEOUT: 3s
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
    ports:
      - 3012:3012
    command: "npm run dev"

  user:
    image: opuscapita/user:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
    labels:
      SERVICE_NAME: user
      SERVICE_TAGS: kong,external
    environment:
      PORT: 3008
      MYSQL_DATABASE: $SECRET_develop_MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $SECRET_develop_MYSQL_ROOT_PASSWORD
      REDIS_AUTH: $SECRET_develop_REDIS_AUTH
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SERVICE_3008_CHECK_HTTP: /api/health/check
      SERVICE_3008_CHECK_INTERVAL: 15s
      SERVICE_3008_CHECK_TIMEOUT: 3s
    ports:
      - 3008:3008
    command: 'npm run dev'

  acl:
    image: opuscapita/acl:dev
    labels:
      - SERVICE_NAME=acl
      - SERVICE_TAGS=external,kong
    environment:
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
      RABBITMQ_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SECURITY_MODE: local
      SERVICE_3013_CHECK_HTTP: /api/health/check
      SERVICE_3013_CHECK_INTERVAL: 15s
      SERVICE_3013_CHECK_TIMEOUT: 3s
    ports:
      - 3013:3013
    depends_on:
      - registrator
      - mysql
    command: 'npm run dev'

  mysql:
    image: mysql:5.7
    command:
      - --character-set-server=utf8
      - --collation-server=utf8_general_ci
    ports:
      - 3306:3306
    labels:
      SERVICE_3306_NAME: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${SECRET_develop_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SECRET_develop_MYSQL_DATABASE}
    depends_on:
      - registrator
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${SECRET_develop_RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${SECRET_develop_RABBITMQ_PASS}
      SERVICE_5672_NAME: rabbitmq-amqp

  redis:
    image: opuscapita/redis:dev
    ports:
      - 6379:6379
    environment:
      REDIS_AUTH: ${SECRET_develop_REDIS_AUTH}
    depends_on:
      - registrator

  kong:
    image: opuscapita/kong:dev
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: $SECRET_develop_KONG_PG_HOST
      KONG_PG_PORT: $SECRET_develop_KONG_PG_PORT
      APP_HOST: $SECRET_develop_KONG_HOST_IP
      APP_HOST_PROTOCOL: $SECRET_develop_KONG_HOST_PROTOCOL
      APP_HOST_PORT: $SECRET_develop_KONG_HOST_PORT
      GATEWAY_SCHEME: $SECRET_develop_KONG_GATEWAY_SCHEME
      GATEWAY_IP: $SECRET_develop_KONG_GATEWAY_IP
      GATEWAY_PORT: $SECRET_develop_KONG_GATEWAY_PORT
      GATEWAY_CALLBACK: $SECRET_develop_KONG_GATEWAY_CALLBACK
      POSTGRES_USER: $SECRET_develop_POSTGRES_USER
      POSTGRES_DB: $SECRET_develop_POSTGRES_DB
      POSTGRES_PASSWORD: $SECRET_develop_POSTGRES_PASSWORD
      REDIS_HOST: $SECRET_develop_KONG_HOST_IP # TODO : remove after api-gw is using config
      REDIS_PORT: 6379 # TODO : remove after api-gw is using config
      REDIS_AUTH: $SECRET_develop_REDIS_AUTH # TODO : remove after api-gw is using config
      SERVICE_8001_NAME: kong
      SERVICE_8080_NAME: kong-http
    ports:
      - 8080:8080
      - 8443:8443
      - 8001:8001
      - 7946:7946
      - 7946:7946/udp
    depends_on:
      - postgres
      - mysql
      - redis

  api-registry:
    image: opuscapita/api-registrator:dev
    ports:
      - 3004:3004
    environment:
      SERVICE_3002_CHECK_HTTP: /api/health/check
      SERVICE_3002_CHECK_INTERVAL: 15s
      SERVICE_3002_CHECK_TIMEOUT: 3s
      AUTH_SERVER: $SECRET_develop_AUTH_HOST_IP
      AUTH_SERVER_PORT: 3005
      API_REGISTRY_PORT: 3004
      GATEWAY_CALLBACK: $SECRET_develop_AUTH_GATEWAY_CALLBACK
    depends_on:
      - kong

  postgres:
    image: postgres:9.4
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $SECRET_develop_POSTGRES_DB
      POSTGRES_DB: $SECRET_develop_POSTGRES_USER
      POSTGRES_PASSWORD: $SECRET_develop_POSTGRES_PASSWORD
    depends_on:
      - registrator

  elastichq:
    image: elastichq/elasticsearch-hq
    ports:
      - 5000:5000

  elasticsearch:
    image: opuscapita/elasticsearch:dev
    environment:
      # This helps ES out with memory usage
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
      - SERVICE_9200_NAME=elasticsearch
      - SERVICE_9300_NAME=elasticsearch-TCP
      - SERVICE_9200_CHECK_HTTP=/
      - SERVICE_9200_CHECK_INTERVAL=15s
      - SERVICE_9200_CHECK_TIMEOUT=3s
      - ES_NO_CLUSTER=${SECRET_develop_ES_NO_CLUSTER}
    depends_on:
      - registrator
      - elastichq
    ports:
      - 9200:9200
      - 9300:9300

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul
    restart: on-failure

  consul:
    image: consul:latest
    ports:
      - 8400:8400
      - 8500:8500
      - 8600:53/udp
    labels:
      SERVICE_IGNORE: true
    command:
      - agent
      - -server
      - -ui
      - -bootstrap
      - -client=0.0.0.0

  zoo:
    image: 'zookeeper:3.4.14'
    restart: always
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    depends_on:
      - acl

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 0
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 12
      # KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      # KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: 'kafka'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30001
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3000
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'
      KAFKA_CONTROLLER_SHUTDOWN_ENABLE: 'true'
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    depends_on:
      - zoo